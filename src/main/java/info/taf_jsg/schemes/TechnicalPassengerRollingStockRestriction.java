//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.09.22 at 09:30:01 PM CEST 
//


package info.taf_jsg.schemes;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice maxOccurs="unbounded">
 *         &lt;element name="PassengerTransportRestriction" maxOccurs="unbounded">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element name="TransportRestrictionCode">
 *                     &lt;simpleType>
 *                       &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *                         &lt;enumeration value="07 Shunt only when hand brake operable with ground staff"/>
 *                         &lt;enumeration value="08 Tank wagon loaded with liquid"/>
 *                         &lt;enumeration value="09 Wagon loaded with people"/>
 *                         &lt;enumeration value="11 Wagon other than bogie wagon with wheelbase of more than 9 metres"/>
 *                         &lt;enumeration value="12 Bogie wagon with distance between wheels of more than 14 metres and up to and including a distance of 17,50 metres"/>
 *                         &lt;enumeration value="13 Bogie wagon with distance between wheels of more than 17,50 metres"/>
 *                         &lt;enumeration value="15 Wagon not allowed over the hump"/>
 *                         &lt;enumeration value="16 Do not fly shunt or gravity shunt (3 red triangles)"/>
 *                         &lt;enumeration value="18 Must not use active braking equipment"/>
 *                         &lt;enumeration value="25 Gas carrying tank wagon with orange side stripe"/>
 *                         &lt;enumeration value="29 Driving safety equipment fault (e.g. event recorder)"/>
 *                         &lt;enumeration value="30 CCS fault (see CCS coding list)"/>
 *                         &lt;enumeration value="31 Braking system fault"/>
 *                         &lt;enumeration value="32 Wheelset, bogie fault"/>
 *                         &lt;enumeration value="33 Headlighting or back lighting fault"/>
 *                         &lt;enumeration value="34 Front glass broken"/>
 *                         &lt;enumeration value="35 Horn fault"/>
 *                         &lt;enumeration value="36 Radio fault"/>
 *                         &lt;enumeration value="37 Energy supply fault"/>
 *                         &lt;enumeration value="38 Traction or motor fault"/>
 *                         &lt;enumeration value="39 Access door fault"/>
 *                         &lt;enumeration value="40 Coupling device fault"/>
 *                         &lt;enumeration value="41 Place this wagon at the front of the train"/>
 *                         &lt;enumeration value="42 Place this wagon at the rear of the train"/>
 *                         &lt;enumeration value="50 Speed restriction"/>
 *                         &lt;enumeration value="51 Diesel locomotive instead of electric locomotive"/>
 *                         &lt;enumeration value="52 Electric locomotive instead of diesel locomotive"/>
 *                         &lt;enumeration value="61 Wagon forming part of a consignment of several wagons"/>
 *                         &lt;enumeration value="62 Wagon forming part of a group of wagons from which it must not be separated"/>
 *                         &lt;enumeration value="63 Special consignment or (for passengers trains) loading/cinematical gauge larger than the planned one"/>
 *                         &lt;enumeration value="68 First or last wagon of a wagon group from which it must not be separated"/>
 *                         &lt;enumeration value="70 Shunt with care (1 red triangle)"/>
 *                         &lt;enumeration value="71 Shunt with special care (2 red triangle)"/>
 *                         &lt;enumeration value="90 Vehicle/trainset planned with passengers operated without passengers"/>
 *                         &lt;enumeration value="91 Vehicle/trainset planned without passengers operated with passengers"/>
 *                         &lt;enumeration value="92 Train planned with hauled rolling stock and operated without any coaches (light engine)"/>
 *                         &lt;enumeration value="94 Gas carrying wagon without orange side stripe"/>
 *                         &lt;enumeration value="99 Other"/>
 *                       &lt;/restriction>
 *                     &lt;/simpleType>
 *                   &lt;/element>
 *                   &lt;element name="TransportRestrictionValue" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *                   &lt;element ref="{http://taf-jsg.info/schemes}FreeTextField" minOccurs="0"/>
 *                   &lt;element name="ActiveRestriction" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="InternalFittingDefect" maxOccurs="unbounded">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element name="InternalFittingDefectCode">
 *                     &lt;simpleType>
 *                       &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *                         &lt;enumeration value="01 Lighting (totally out)"/>
 *                         &lt;enumeration value="02 Window pane broken"/>
 *                         &lt;enumeration value="03 Intercom fault"/>
 *                         &lt;enumeration value="04 Public-address system (incl. WiFi) fault"/>
 *                         &lt;enumeration value="05 Seats, berths"/>
 *                         &lt;enumeration value="06 Heating, air conditioning"/>
 *                         &lt;enumeration value="07 Toilets"/>
 *                         &lt;enumeration value="08 Water supply"/>
 *                         &lt;enumeration value="09 Bar/Restaurant equipments"/>
 *                         &lt;enumeration value="10 Spotting"/>
 *                         &lt;enumeration value="11 No reservation signs in the vehicle"/>
 *                         &lt;enumeration value="12 Facilities for bike transport missing/limited"/>
 *                         &lt;enumeration value="13 PRM accessible device missing/out of order"/>
 *                         &lt;enumeration value="99 Other"/>
 *                       &lt;/restriction>
 *                     &lt;/simpleType>
 *                   &lt;/element>
 *                   &lt;element ref="{http://taf-jsg.info/schemes}FreeTextField" minOccurs="0"/>
 *                   &lt;element name="ActiveRestriction" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="OtherPassengerRestrictionOrDefect" maxOccurs="unbounded">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element name="RestrictionOrDefectCode">
 *                     &lt;simpleType>
 *                       &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *                         &lt;minLength value="4"/>
 *                         &lt;maxLength value="4"/>
 *                       &lt;/restriction>
 *                     &lt;/simpleType>
 *                   &lt;/element>
 *                   &lt;element name="RestrictionOrDefectValue" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *                   &lt;element ref="{http://taf-jsg.info/schemes}FreeTextField" minOccurs="0"/>
 *                   &lt;element name="ActiveRestriction" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *       &lt;/choice>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "passengerTransportRestrictionOrInternalFittingDefectOrOtherPassengerRestrictionOrDefect"
})
@XmlRootElement(name = "TechnicalPassengerRollingStockRestriction")
public class TechnicalPassengerRollingStockRestriction {

    @XmlElements({
        @XmlElement(name = "PassengerTransportRestriction", type = TechnicalPassengerRollingStockRestriction.PassengerTransportRestriction.class),
        @XmlElement(name = "InternalFittingDefect", type = TechnicalPassengerRollingStockRestriction.InternalFittingDefect.class),
        @XmlElement(name = "OtherPassengerRestrictionOrDefect", type = TechnicalPassengerRollingStockRestriction.OtherPassengerRestrictionOrDefect.class)
    })
    protected List<Object> passengerTransportRestrictionOrInternalFittingDefectOrOtherPassengerRestrictionOrDefect;

    /**
     * Gets the value of the passengerTransportRestrictionOrInternalFittingDefectOrOtherPassengerRestrictionOrDefect property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the passengerTransportRestrictionOrInternalFittingDefectOrOtherPassengerRestrictionOrDefect property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPassengerTransportRestrictionOrInternalFittingDefectOrOtherPassengerRestrictionOrDefect().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TechnicalPassengerRollingStockRestriction.PassengerTransportRestriction }
     * {@link TechnicalPassengerRollingStockRestriction.InternalFittingDefect }
     * {@link TechnicalPassengerRollingStockRestriction.OtherPassengerRestrictionOrDefect }
     * 
     * 
     */
    public List<Object> getPassengerTransportRestrictionOrInternalFittingDefectOrOtherPassengerRestrictionOrDefect() {
        if (passengerTransportRestrictionOrInternalFittingDefectOrOtherPassengerRestrictionOrDefect == null) {
            passengerTransportRestrictionOrInternalFittingDefectOrOtherPassengerRestrictionOrDefect = new ArrayList<Object>();
        }
        return this.passengerTransportRestrictionOrInternalFittingDefectOrOtherPassengerRestrictionOrDefect;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="InternalFittingDefectCode">
     *           &lt;simpleType>
     *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
     *               &lt;enumeration value="01 Lighting (totally out)"/>
     *               &lt;enumeration value="02 Window pane broken"/>
     *               &lt;enumeration value="03 Intercom fault"/>
     *               &lt;enumeration value="04 Public-address system (incl. WiFi) fault"/>
     *               &lt;enumeration value="05 Seats, berths"/>
     *               &lt;enumeration value="06 Heating, air conditioning"/>
     *               &lt;enumeration value="07 Toilets"/>
     *               &lt;enumeration value="08 Water supply"/>
     *               &lt;enumeration value="09 Bar/Restaurant equipments"/>
     *               &lt;enumeration value="10 Spotting"/>
     *               &lt;enumeration value="11 No reservation signs in the vehicle"/>
     *               &lt;enumeration value="12 Facilities for bike transport missing/limited"/>
     *               &lt;enumeration value="13 PRM accessible device missing/out of order"/>
     *               &lt;enumeration value="99 Other"/>
     *             &lt;/restriction>
     *           &lt;/simpleType>
     *         &lt;/element>
     *         &lt;element ref="{http://taf-jsg.info/schemes}FreeTextField" minOccurs="0"/>
     *         &lt;element name="ActiveRestriction" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "internalFittingDefectCode",
        "freeTextField",
        "activeRestriction"
    })
    public static class InternalFittingDefect {

        @XmlElement(name = "InternalFittingDefectCode", required = true)
        protected String internalFittingDefectCode;
        @XmlElement(name = "FreeTextField")
        protected String freeTextField;
        @XmlElement(name = "ActiveRestriction")
        protected Boolean activeRestriction;

        /**
         * Gets the value of the internalFittingDefectCode property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getInternalFittingDefectCode() {
            return internalFittingDefectCode;
        }

        /**
         * Sets the value of the internalFittingDefectCode property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setInternalFittingDefectCode(String value) {
            this.internalFittingDefectCode = value;
        }

        /**
         * Gets the value of the freeTextField property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getFreeTextField() {
            return freeTextField;
        }

        /**
         * Sets the value of the freeTextField property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setFreeTextField(String value) {
            this.freeTextField = value;
        }

        /**
         * Gets the value of the activeRestriction property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public Boolean isActiveRestriction() {
            return activeRestriction;
        }

        /**
         * Sets the value of the activeRestriction property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setActiveRestriction(Boolean value) {
            this.activeRestriction = value;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="RestrictionOrDefectCode">
     *           &lt;simpleType>
     *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
     *               &lt;minLength value="4"/>
     *               &lt;maxLength value="4"/>
     *             &lt;/restriction>
     *           &lt;/simpleType>
     *         &lt;/element>
     *         &lt;element name="RestrictionOrDefectValue" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
     *         &lt;element ref="{http://taf-jsg.info/schemes}FreeTextField" minOccurs="0"/>
     *         &lt;element name="ActiveRestriction" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "restrictionOrDefectCode",
        "restrictionOrDefectValue",
        "freeTextField",
        "activeRestriction"
    })
    public static class OtherPassengerRestrictionOrDefect {

        @XmlElement(name = "RestrictionOrDefectCode", required = true)
        protected String restrictionOrDefectCode;
        @XmlElement(name = "RestrictionOrDefectValue")
        protected String restrictionOrDefectValue;
        @XmlElement(name = "FreeTextField")
        protected String freeTextField;
        @XmlElement(name = "ActiveRestriction")
        protected Boolean activeRestriction;

        /**
         * Gets the value of the restrictionOrDefectCode property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getRestrictionOrDefectCode() {
            return restrictionOrDefectCode;
        }

        /**
         * Sets the value of the restrictionOrDefectCode property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setRestrictionOrDefectCode(String value) {
            this.restrictionOrDefectCode = value;
        }

        /**
         * Gets the value of the restrictionOrDefectValue property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getRestrictionOrDefectValue() {
            return restrictionOrDefectValue;
        }

        /**
         * Sets the value of the restrictionOrDefectValue property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setRestrictionOrDefectValue(String value) {
            this.restrictionOrDefectValue = value;
        }

        /**
         * Gets the value of the freeTextField property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getFreeTextField() {
            return freeTextField;
        }

        /**
         * Sets the value of the freeTextField property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setFreeTextField(String value) {
            this.freeTextField = value;
        }

        /**
         * Gets the value of the activeRestriction property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public Boolean isActiveRestriction() {
            return activeRestriction;
        }

        /**
         * Sets the value of the activeRestriction property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setActiveRestriction(Boolean value) {
            this.activeRestriction = value;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="TransportRestrictionCode">
     *           &lt;simpleType>
     *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
     *               &lt;enumeration value="07 Shunt only when hand brake operable with ground staff"/>
     *               &lt;enumeration value="08 Tank wagon loaded with liquid"/>
     *               &lt;enumeration value="09 Wagon loaded with people"/>
     *               &lt;enumeration value="11 Wagon other than bogie wagon with wheelbase of more than 9 metres"/>
     *               &lt;enumeration value="12 Bogie wagon with distance between wheels of more than 14 metres and up to and including a distance of 17,50 metres"/>
     *               &lt;enumeration value="13 Bogie wagon with distance between wheels of more than 17,50 metres"/>
     *               &lt;enumeration value="15 Wagon not allowed over the hump"/>
     *               &lt;enumeration value="16 Do not fly shunt or gravity shunt (3 red triangles)"/>
     *               &lt;enumeration value="18 Must not use active braking equipment"/>
     *               &lt;enumeration value="25 Gas carrying tank wagon with orange side stripe"/>
     *               &lt;enumeration value="29 Driving safety equipment fault (e.g. event recorder)"/>
     *               &lt;enumeration value="30 CCS fault (see CCS coding list)"/>
     *               &lt;enumeration value="31 Braking system fault"/>
     *               &lt;enumeration value="32 Wheelset, bogie fault"/>
     *               &lt;enumeration value="33 Headlighting or back lighting fault"/>
     *               &lt;enumeration value="34 Front glass broken"/>
     *               &lt;enumeration value="35 Horn fault"/>
     *               &lt;enumeration value="36 Radio fault"/>
     *               &lt;enumeration value="37 Energy supply fault"/>
     *               &lt;enumeration value="38 Traction or motor fault"/>
     *               &lt;enumeration value="39 Access door fault"/>
     *               &lt;enumeration value="40 Coupling device fault"/>
     *               &lt;enumeration value="41 Place this wagon at the front of the train"/>
     *               &lt;enumeration value="42 Place this wagon at the rear of the train"/>
     *               &lt;enumeration value="50 Speed restriction"/>
     *               &lt;enumeration value="51 Diesel locomotive instead of electric locomotive"/>
     *               &lt;enumeration value="52 Electric locomotive instead of diesel locomotive"/>
     *               &lt;enumeration value="61 Wagon forming part of a consignment of several wagons"/>
     *               &lt;enumeration value="62 Wagon forming part of a group of wagons from which it must not be separated"/>
     *               &lt;enumeration value="63 Special consignment or (for passengers trains) loading/cinematical gauge larger than the planned one"/>
     *               &lt;enumeration value="68 First or last wagon of a wagon group from which it must not be separated"/>
     *               &lt;enumeration value="70 Shunt with care (1 red triangle)"/>
     *               &lt;enumeration value="71 Shunt with special care (2 red triangle)"/>
     *               &lt;enumeration value="90 Vehicle/trainset planned with passengers operated without passengers"/>
     *               &lt;enumeration value="91 Vehicle/trainset planned without passengers operated with passengers"/>
     *               &lt;enumeration value="92 Train planned with hauled rolling stock and operated without any coaches (light engine)"/>
     *               &lt;enumeration value="94 Gas carrying wagon without orange side stripe"/>
     *               &lt;enumeration value="99 Other"/>
     *             &lt;/restriction>
     *           &lt;/simpleType>
     *         &lt;/element>
     *         &lt;element name="TransportRestrictionValue" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
     *         &lt;element ref="{http://taf-jsg.info/schemes}FreeTextField" minOccurs="0"/>
     *         &lt;element name="ActiveRestriction" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "transportRestrictionCode",
        "transportRestrictionValue",
        "freeTextField",
        "activeRestriction"
    })
    public static class PassengerTransportRestriction {

        @XmlElement(name = "TransportRestrictionCode", required = true)
        protected String transportRestrictionCode;
        @XmlElement(name = "TransportRestrictionValue")
        protected String transportRestrictionValue;
        @XmlElement(name = "FreeTextField")
        protected String freeTextField;
        @XmlElement(name = "ActiveRestriction")
        protected Boolean activeRestriction;

        /**
         * Gets the value of the transportRestrictionCode property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getTransportRestrictionCode() {
            return transportRestrictionCode;
        }

        /**
         * Sets the value of the transportRestrictionCode property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setTransportRestrictionCode(String value) {
            this.transportRestrictionCode = value;
        }

        /**
         * Gets the value of the transportRestrictionValue property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getTransportRestrictionValue() {
            return transportRestrictionValue;
        }

        /**
         * Sets the value of the transportRestrictionValue property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setTransportRestrictionValue(String value) {
            this.transportRestrictionValue = value;
        }

        /**
         * Gets the value of the freeTextField property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getFreeTextField() {
            return freeTextField;
        }

        /**
         * Sets the value of the freeTextField property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setFreeTextField(String value) {
            this.freeTextField = value;
        }

        /**
         * Gets the value of the activeRestriction property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public Boolean isActiveRestriction() {
            return activeRestriction;
        }

        /**
         * Sets the value of the activeRestriction property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setActiveRestriction(Boolean value) {
            this.activeRestriction = value;
        }

    }

}
